<launch>
    <!-- 启动gazebo环境，加载swim_bot模型 -->
    <include file="$(find robot_model)/launch/gazebo.launch"/>

    <!-- 启动rviz和joint & robot/joint state 发布节点 -->
    <include file="$(find robot_model)/launch/rviz.launch" />


    <!-- 2 Load parameters into the specified namespace -->
    <!-- <rosparam command="load" file="$(find robot_model)/config/joints.yaml" ns="joint_state_controller" />
    <rosparam command="load" file="$(find robot_model)/config/wheels.yaml" ns="wheels_controller" /> -->

    <!-- 3 The controller is responsible for managing the joint status of the robot -->
    <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller
                wheels_controller"/> -->


    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find robot_model)/config/wheel_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/swim_bot" args="joint_state_controller
					  wheel_left_effort_controller
					  wheel_right_effort_controller"/>

</launch>